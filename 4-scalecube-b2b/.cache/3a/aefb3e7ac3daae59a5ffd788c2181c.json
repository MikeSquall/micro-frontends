{"id":"cp1M","dependencies":[{"name":"/home/idan/prj/playground/micro-frontends/node_modules/rxjs/Observer.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/idan/prj/playground/micro-frontends/package.json","includedInParent":true,"mtime":1538321389029},{"name":"/home/idan/prj/playground/micro-frontends/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";exports.empty={closed:!0,next:function(t){},error:function(t){throw t},complete:function(){}};","map":{"mappings":[{"source":"../src/Observer.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":1,"column":13}},{"source":"../src/Observer.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":1,"column":21}},{"source":"../src/Observer.ts","name":null,"original":{"line":31,"column":36},"generated":{"line":1,"column":27}},{"source":"../src/Observer.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":1,"column":28}},{"source":"../src/Observer.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":36}},{"source":"../src/Observer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":1,"column":38}},{"source":"../src/Observer.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":43}},{"source":"../src/Observer.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":52}},{"source":"../src/Observer.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":1,"column":57}},{"source":"../src/Observer.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":63}},{"source":"../src/Observer.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":72}},{"source":"../src/Observer.ts","name":null,"original":{"line":34,"column":26},"generated":{"line":1,"column":75}},{"source":"../src/Observer.ts","name":null,"original":{"line":34,"column":32},"generated":{"line":1,"column":81}},{"source":"../src/Observer.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":84}},{"source":"../src/Observer.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":93}}],"sources":{"../src/Observer.ts":"export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n"},"lineCount":null}},"hash":"949b6be0c42b4daf27e7c5f1b3ddc22d","cacheData":{"env":{}}}