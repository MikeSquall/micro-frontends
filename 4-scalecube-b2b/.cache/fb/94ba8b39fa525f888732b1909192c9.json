{"id":"5esv","dependencies":[{"name":"/home/idan/prj/playground/micro-frontends/node_modules/rxjs/util/pipe.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/idan/prj/playground/micro-frontends/package.json","includedInParent":true,"mtime":1538321389029},{"name":"/home/idan/prj/playground/micro-frontends/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"./noop","loc":{"line":2,"column":21},"parent":"/home/idan/prj/playground/micro-frontends/node_modules/rxjs/util/pipe.js","resolved":"/home/idan/prj/playground/micro-frontends/node_modules/rxjs/util/noop.js"}],"generated":{"js":"\"use strict\";var r=require(\"./noop\");function n(){for(var r=[],n=0;n<arguments.length;n++)r[n-0]=arguments[n];return e(r)}function e(n){return n?1===n.length?n[0]:function(r){return n.reduce(function(r,n){return n(r)},r)}:r.noop}exports.pipe=n,exports.pipeFromArray=e;","map":{"mappings":[{"source":"../../src/util/pipe.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":17}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":19}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":1,"column":21},"generated":{"line":1,"column":27}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":37}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":46}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":54}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":58}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":60}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":63}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":65}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":67}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":69}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":79}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":86}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":90}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":92}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":94}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":97}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":1,"column":107}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":1,"column":110}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":18,"column":9},"generated":{"line":1,"column":117}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":18,"column":23},"generated":{"line":1,"column":119}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":122}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":131}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":22,"column":36},"generated":{"line":1,"column":133}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":136}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":143}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":27,"column":21},"generated":{"line":1,"column":145}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":149}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":151}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":1,"column":158}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":28,"column":15},"generated":{"line":1,"column":160}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":163}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":1,"column":172}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":175}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":11},"generated":{"line":1,"column":182}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":15},"generated":{"line":1,"column":184}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":22},"generated":{"line":1,"column":191}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":23},"generated":{"line":1,"column":200}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":34},"generated":{"line":1,"column":202}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":62},"generated":{"line":1,"column":205}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":62},"generated":{"line":1,"column":212}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":65},"generated":{"line":1,"column":214}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":32,"column":72},"generated":{"line":1,"column":218}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":1,"column":222}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":1,"column":224}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":1,"column":229}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":1,"column":237}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":17,"column":20},"generated":{"line":1,"column":242}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":1,"column":244}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":1,"column":252}},{"source":"../../src/util/pipe.ts","name":null,"original":{"line":22,"column":29},"generated":{"line":1,"column":266}}],"sources":{"../../src/util/pipe.ts":"import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n"},"lineCount":null}},"hash":"2938cc97743d9571b2c9fff96347a411","cacheData":{"env":{}}}